/*
LIS的核心算法在函数lis，可以看出时间复杂度是O(n^2)
*/

#include<iostream>
#define MAX 2333

using namespace std;

int dp[MAX];
int a[MAX];
int flag = 1;

void lis(int n){
	for(int i = 2;i < n;i++){
		/*
		注意这里不能反向遍历，只有从开始就遍历才能比较出最大的，否则
		只能比较出距离当前数据最近的上升序列长度。
		*/
		for(int j = 1;j < i;j++){
			if(a[i] > a[j]){
				dp[i] = dp[i] > dp[j]+1 ? dp[i] : dp[j]+1;
			}
		}
	}
}

int main() {
	int N;
	for(int i = 1;i <= N;i++){
		cin >> a[i];
		dp[i] = 1;
	}
	lis(N);
	cout << a[flag] << endl;

	system("pause");
	return 0;
}
